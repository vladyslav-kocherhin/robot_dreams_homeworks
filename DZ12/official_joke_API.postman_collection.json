{
	"info": {
		"_postman_id": "0c5b7ca2-8adc-4f0b-aa97-d25787cfd00f",
		"name": "official_joke_API",
		"description": "Vladyslav Kocherhin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13990487",
		"_collection_link": "https://grey-robot-744807.postman.co/workspace/Vlad-1~8da3609e-e933-4595-8960-e669a8235672/collection/13990487-0c5b7ca2-8adc-4f0b-aa97-d25787cfd00f?action=share&source=collection_link&creator=13990487"
	},
	"item": [
		{
			"name": "Available methods",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"API allow GET and HEAD methods\", function () {\r",
							"    let allowHeader = pm.response.headers.get(\"Allow\");\r",
							"\r",
							"    pm.expect(allowHeader).to.include(\"GET\");\r",
							"    pm.expect(allowHeader).to.include(\"HEAD\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3005",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005"
				}
			},
			"response": []
		},
		{
			"name": "Grab a random joke 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response conrains all necessary keys\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseJson).to.have.all.keys(\"type\", \"setup\", \"punchline\", \"id\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/random_joke",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"random_joke"
					]
				}
			},
			"response": []
		},
		{
			"name": "Grab a random joke 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response conrains all necessary keys\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseJson).to.have.all.keys(\"type\", \"setup\", \"punchline\", \"id\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/random",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get joke types",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response conrains all necessary values\", function () {\r",
							"    let expectedArray = [\"general\", \"knock-knock\", \"programming\", \"dad\"];\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.be.an(\"array\");\r",
							"    pm.expect(responseJson).to.have.members(expectedArray);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/types",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"types"
					]
				}
			},
			"response": []
		},
		{
			"name": "Grab ten random jokes 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Array contains 10 objects\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.be.an(\"array\");\r",
							"    pm.expect(responseJson.length).to.eql(10);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/random_ten",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"random_ten"
					]
				}
			},
			"response": []
		},
		{
			"name": "Grab ten random jokes 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Array contains 10 objects\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.be.an(\"array\");\r",
							"    pm.expect(responseJson.length).to.eql(10);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/ten",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						"ten"
					]
				}
			},
			"response": []
		},
		{
			"name": "Grab 5 random jokes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Array contains 5 objects\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.be.an(\"array\");\r",
							"    pm.expect(responseJson.length).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/random/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						"random",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Grab 250 random jokes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Array contains 250 objects\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.be.an(\"array\");\r",
							"    pm.expect(responseJson.length).to.eql(250);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/random/250",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						"random",
						"250"
					]
				}
			},
			"response": []
		},
		{
			"name": "Grab a random joke by type: Programming",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Joke has a type 'programming'\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.be.an(\"array\").that.is.not.empty;\r",
							"    pm.expect(responseJson[0].type).to.eql(\"programming\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/programming/random",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						"programming",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "Grab a random joke by type: Dad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Joke has a type 'programming'\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.be.an(\"array\").that.is.not.empty;\r",
							"    pm.expect(responseJson[0].type).to.eql(\"dad\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/dad/random",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						"dad",
						"random"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}